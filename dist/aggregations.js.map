{"version":3,"sources":["../src/aggregations.js"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAO,O;;;;;;;;;;;;;;;;;;;;;8BAEM,Y;AAEX,gCAAc;AAAA;AAAE;;;;6BAEb,U,EAAY,C,EAAG;AAChB,gBAAI,WAAW,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,qBAAO,UAAP;AACD;AACD;AACA;AACA;AACA,mBAAO,CAAC,WAAW,CAAX,CAAD,CAAP;AACD;;;8BAEG,M,EAAQ;AACV,gBAAI,OAAO,MAAP,KAAkB,CAAtB,EAAyB;AACvB,qBAAO,IAAP;AACD;AACD,mBAAO,OAAO,MAAP,CAAc,UAAC,CAAD,EAAG,CAAH;AAAA,qBAAS,IAAE,CAAX;AAAA,aAAd,CAAP;AACD;;;kCAEO,M,EAAQ;AACd,gBAAI,OAAO,MAAP,KAAkB,CAAtB,EAAyB;AACvB,qBAAO,IAAP;AACD;AACD,mBAAO,OAAO,MAAP,CAAc,UAAC,CAAD,EAAG,CAAH;AAAA,qBAAS,IAAE,CAAX;AAAA,aAAd,IAA8B,OAAO,MAA5C;AACD;;;8BAEG,M,EAAQ;AACV,gBAAI,OAAO,MAAP,KAAkB,CAAtB,EAAyB;AACvB,qBAAO,IAAP;AACD;AACD,mBAAO,OAAO,MAAP,CAAc,UAAC,CAAD,EAAG,CAAH;AAAA,qBAAS,IAAE,CAAF,GAAI,CAAJ,GAAM,CAAf;AAAA,aAAd,CAAP;AACD;;;8BAEG,M,EAAQ;AACV,gBAAI,OAAO,MAAP,KAAkB,CAAtB,EAAyB;AACvB,qBAAO,IAAP;AACD;AACD,mBAAO,OAAO,MAAP,CAAc,UAAC,CAAD,EAAG,CAAH;AAAA,qBAAS,IAAE,CAAF,GAAI,CAAJ,GAAM,CAAf;AAAA,aAAd,CAAP;AACD","file":"aggregations.js","sourcesContent":["import _ from \"lodash\";\n\nexport class Aggregations {\n\n  constructor() {}\n\n  on(timeSeries, f) {\n    if (timeSeries.length <= 1) {\n      return timeSeries;\n    }\n    // TODO: iterate over timestamps with interpolation when necessary\n    // It can be very time-consuming if there's too much data\n    // Does hawkular-metrics do it?\n    return [timeSeries[0]];\n  }\n\n  sum(values) {\n    if (values.length === 0) {\n      return null;\n    }\n    return values.reduce((a,b) => a+b);\n  }\n\n  average(values) {\n    if (values.length === 0) {\n      return null;\n    }\n    return values.reduce((a,b) => a+b) / values.length;\n  }\n\n  min(values) {\n    if (values.length === 0) {\n      return null;\n    }\n    return values.reduce((a,b) => a<b?a:b);\n  }\n\n  max(values) {\n    if (values.length === 0) {\n      return null;\n    }\n    return values.reduce((a,b) => a>b?a:b);\n  }\n}\n"]}