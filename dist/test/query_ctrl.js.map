{"version":3,"sources":["../../src/query_ctrl.js"],"names":[],"mappings":";;;;;;;;;AAAA;;AACA;;;;;;;;IAEa,2B,WAAA,2B;;;AAEX,uCAAY,MAAZ,EAAoB,SAApB,EAA+B,YAA/B,EAA8C;AAAA;;AAAA,+GACtC,MADsC,EAC9B,SAD8B;;AAG5C,UAAK,KAAL,GAAa,MAAb;AACA,UAAK,YAAL,GAAoB,YAApB;;AAEA,UAAK,WAAL,GAAmB,CACjB,EAAC,OAAO,OAAR,EAAiB,MAAM,OAAvB,EADiB,EAEjB,EAAC,OAAO,SAAR,EAAmB,MAAM,SAAzB,EAFiB,CAAnB;;AAKA,UAAK,eAAL,GAAuB,CACrB,EAAC,OAAO,MAAR,EAAgB,MAAM,MAAtB,EADqB,EAErB,EAAC,OAAO,KAAR,EAAe,MAAM,KAArB,EAFqB,EAGrB,EAAC,OAAO,SAAR,EAAmB,MAAM,SAAzB,EAHqB,EAIrB,EAAC,OAAO,KAAR,EAAe,MAAM,KAArB,EAJqB,EAKrB,EAAC,OAAO,KAAR,EAAe,MAAM,KAArB,EALqB,CAAvB;;AAQA,UAAK,MAAL,CAAY,IAAZ,GAAmB,MAAK,MAAL,CAAY,IAAZ,IAAoB,OAAvC;AACA,UAAK,MAAL,CAAY,MAAZ,GAAqB,MAAK,MAAL,CAAY,MAAZ,IAAsB,eAA3C;AACA,UAAK,MAAL,CAAY,IAAZ,GAAmB,MAAK,MAAL,CAAY,IAAZ,KAAqB,IAAxC;AACA,UAAK,MAAL,CAAY,MAAZ,GAAqB,MAAK,MAAL,CAAY,MAAZ,IAAsB,MAA3C;AACA,YAAQ,GAAR;AAvB4C;AAwB7C;;;;iCAEY;AACX,aAAO,KAAK,UAAL,CAAgB,eAAhB,CAAgC,KAAK,MAArC,EACJ,IADI,CACC,KAAK,YAAL,CAAkB,mBAAlB,CAAsC,KAAtC,CADD,CAAP;AAEE;AACH;;;uCAEkB;AACjB,WAAK,SAAL,CAAe,OAAf,GADiB,CACS;AAC3B;;;;;;AAGH,4BAA4B,WAA5B,GAA0C,4BAA1C","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\n\nexport class HawkularDatasourceQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, uiSegmentSrv)  {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.uiSegmentSrv = uiSegmentSrv;\n\n    this.metricTypes = [\n      {value: 'gauge', text: 'Gauge'},\n      {value: 'counter', text: 'Counter'}\n    ];\n\n    this.reduceFunctions = [\n      {value: 'none', text: 'None'},\n      {value: 'sum', text: 'Sum'},\n      {value: 'average', text: 'Average'},\n      {value: 'min', text: 'min'},\n      {value: 'max', text: 'max'}\n    ];\n\n    this.target.type = this.target.type || 'gauge';\n    this.target.target = this.target.target || 'select metric';\n    this.target.rate = this.target.rate === true;\n    this.target.reduce = this.target.reduce || 'none';\n    console.log(this);\n  }\n\n  getOptions() {\n    return this.datasource.metricFindQuery(this.target)\n      .then(this.uiSegmentSrv.transformToSegments(false));\n      // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n  }\n\n  onChangeInternal() {\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\n  }\n}\n\nHawkularDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n"]}