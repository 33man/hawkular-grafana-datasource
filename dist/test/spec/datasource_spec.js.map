{"version":3,"sources":["../../../spec/datasource_spec.js"],"names":[],"mappings":"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","file":"datasource_spec.js","sourcesContent":["import {Datasource} from \"../module\";\nimport Q from \"q\";\n\ndescribe('HawkularDatasource', function () {\n  var ctx = {};\n  var hProtocol = 'https';\n  var hHostname = 'test.com';\n  var hPort = '876';\n  var hPath = 'hawkular/metrics';\n  var instanceSettings = {\n    url: hProtocol + '://' + hHostname + ':' + hPort + '/' + hPath,\n    jsonData: {\n      tenant: 'test-tenant'\n    }\n  };\n\n  var parsePathElements = function(request) {\n    expect(request.method).to.equal('POST');\n    expect(request.headers).to.have.property('Hawkular-Tenant', instanceSettings.jsonData.tenant);\n\n    var parser = document.createElement('a');\n    parser.href = request.url;\n\n    expect(parser).to.have.property('protocol', hProtocol + ':');\n    expect(parser).to.have.property('hostname', hHostname);\n    expect(parser).to.have.property('port', hPort);\n    expect(parser).to.have.property('pathname');\n\n    return parser.pathname.split('/').filter(e => e.length != 0);\n  }\n\n  beforeEach(function () {\n    ctx.$q = Q;\n    ctx.backendSrv = {};\n    ctx.backendSrv.datasourceRequest = function (request) {\n      return ctx.$q.when({data: {'Implementation-Version': '1.0.0'}})\n    };\n    ctx.templateSrv = {\n        replace: function(target, vars) {\n          return target;\n        }\n    };\n    ctx.ds = new Datasource(instanceSettings, ctx.$q, ctx.backendSrv, ctx.templateSrv);\n  });\n\n  it('should return an empty array when no targets are set', function (done) {\n    ctx.ds.query({targets: []}).then(function (result) {\n      expect(result).to.have.property('data').with.length(0);\n    }).then(v => done(), err => done(err));\n  });\n\n  it('should return the server results when a target is set', function (done) {\n\n    var options = {\n      range: {\n        from: 15,\n        to: 30\n      },\n      targets: [{\n        target: 'memory',\n        type: 'gauge',\n        rate: false,\n        queryBy: 'ids'\n      }, {\n        target: 'packets',\n        type: 'counter',\n        rate: true,\n        queryBy: 'ids'\n      }]\n    };\n\n    ctx.backendSrv.datasourceRequest = function (request) {\n      let pathElements = parsePathElements(request);\n      var id = pathElements[2] == 'gauges' ? 'memory' : 'packets';\n\n      expect(pathElements).to.have.length(5);\n      expect(pathElements.slice(0, 2)).to.deep.equal(hPath.split('/'));\n      expect(pathElements[2]).to.be.oneOf(['gauges', 'counters']);\n      if (pathElements[2] == 'gauges') {\n        expect(pathElements.slice(3)).to.deep.equal(['raw', 'query']);\n        expect(request.data).to.deep.equal({\n          start: options.range.from,\n          end: options.range.to,\n          ids: [id],\n          order: 'ASC'\n        });\n      } else {\n        expect(pathElements.slice(3)).to.deep.equal(['rate', 'query']);\n        expect(request.data).to.deep.equal({\n          start: options.range.from,\n          end: options.range.to,\n          ids: [id],\n          order: 'ASC'\n        });\n      }\n\n      return ctx.$q.when({\n        status: 200,\n        data: [{\n          id: id,\n          data: [{\n            timestamp: 13,\n            value: 15\n          }, {\n            timestamp: 19,\n            value: 21\n          }]\n        }]\n      });\n    };\n\n    ctx.ds.query(options).then(function (result) {\n      expect(result.data).to.have.length(2);\n      expect(result.data.map(t => t.target)).to.include.members(['memory', 'packets']);\n      expect(result.data[0].datapoints).to.deep.equal([[15, 13], [21, 19]]);\n      expect(result.data[1].datapoints).to.deep.equal([[15, 13], [21, 19]]);\n    }).then(v => done(), err => done(err));\n  });\n\n  it('should return multiple results with templated target', function (done) {\n\n    let options = {\n      range: {\n        from: 15,\n        to: 30\n      },\n      targets: [{\n        target: '$app/memory',\n        type: 'gauge',\n        rate: false,\n        queryBy: 'ids'\n      }]\n    };\n\n    ctx.templateSrv.replace = function(target, vars) {\n      expect(target).to.equal('$app');\n      return \"{app_1,app_2}\";\n    };\n\n    ctx.backendSrv.datasourceRequest = function(request) {\n      expect(request.url).to.have.string(\"/gauges/raw/query\");\n      expect(request.data.ids).to.include.members(['app_1/memory', 'app_2/memory']);\n      return ctx.$q.when({\n        status: 200,\n        data: [{\n          id: \"app_1/memory\",\n          data: [{\n            timestamp: 13,\n            value: 15\n          }, {\n            timestamp: 19,\n            value: 21\n          }]\n        },{\n          id: \"app_2/memory\",\n          data: [{\n            timestamp: 13,\n            value: 28\n          }, {\n            timestamp: 19,\n            value: 32\n          }]\n        }]\n      });\n    };\n\n    ctx.ds.query(options).then(function (result) {\n      expect(result.data).to.have.length(2);\n      expect(result.data.map(t => t.target)).to.include.members(['app_1/memory', 'app_2/memory']);\n      expect(result.data[0].datapoints).to.deep.equal([[15, 13], [21, 19]]);\n      expect(result.data[1].datapoints).to.deep.equal([[28, 13], [32, 19]]);\n    }).then(v => done(), err => done(err));\n  });\n});\n"]}