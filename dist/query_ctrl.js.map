{"version":3,"sources":["../src/query_ctrl.js"],"names":[],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\n\nexport class HawkularDatasourceQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, uiSegmentSrv, $q)  {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.uiSegmentSrv = uiSegmentSrv;\n    this.$q = $q;\n\n    this.listQueryBy = [\n      {value: 'ids', text: 'Search by name'},\n      {value: 'tags', text: 'Search by tags'}\n    ];\n\n    this.metricTypes = [\n      {value: 'gauge', text: 'Gauge'},\n      {value: 'counter', text: 'Counter'}\n    ];\n\n    this.target.queryBy = this.target.queryBy || this.listQueryBy[0].value;\n    this.target.type = this.target.type || this.metricTypes[0].value;\n    this.target.target = this.target.target || 'select metric';\n    this.target.rate = this.target.rate === true;\n    this.target.tags = this.target.tags || [];\n\n    this.tagsSegments = _.reduce(this.target.tags, function(list, tag) {\n      list.push(uiSegmentSrv.newKey(tag.name));\n      list.push(uiSegmentSrv.newOperator(':'));\n      list.push(uiSegmentSrv.newKeyValue(tag.value));\n      list.push(uiSegmentSrv.newOperator(','));\n      return list;\n    }, []);\n    this.tagsSegments.push(uiSegmentSrv.newPlusButton());\n    this.removeTagsSegment = uiSegmentSrv.newSegment({fake: true, value: '-- Remove tag --'});\n  }\n\n  getTagsSegments(segment, $index) {\n    if (segment.type === 'plus-button') {\n      return this.$q.when([]);\n    } else if (segment.type === 'key')  {\n      return this.$q.when([angular.copy(this.removeTagsSegment)]);\n    } else if (segment.type === 'value')  {\n      var key = this.tagsSegments[$index-2].value;\n      return this.datasource.suggestTags(this.target.type, key)\n        .then(this.uiSegmentSrv.transformToSegments(false));\n    }\n  }\n\n  tagsSegmentChanged(segment, index) {\n    if (segment.value === this.removeTagsSegment.value) {\n      this.tagsSegments.splice(index, 4);\n    } else if (segment.type === 'plus-button') {\n      this.tagsSegments.splice(index, 1, this.uiSegmentSrv.newOperator(','));\n      this.tagsSegments.splice(index, 0, this.uiSegmentSrv.newKeyValue(' *'));\n      this.tagsSegments.splice(index, 0, this.uiSegmentSrv.newOperator(':'));\n      this.tagsSegments.splice(index, 0, this.uiSegmentSrv.newKey(segment.value));\n      this.tagsSegments.push(this.uiSegmentSrv.newPlusButton());\n    } else {\n      this.tagsSegments[index] = segment;\n    }\n    this.tagsToModel();\n    this.onChangeInternal();\n  }\n\n  tagsToModel() {\n    this.target.tags = [];\n    for (var i = 0; i < this.tagsSegments.length - 2; i += 4) {\n      let key = this.tagsSegments[i].value;\n      let val = this.tagsSegments[i+2].fake ? '*' : (this.tagsSegments[i+2].value || '*');\n      this.target.tags.push({name: key, value: val});\n    }\n  }\n\n  getOptions() {\n    return this.datasource.suggestQueries(this.target)\n      .then(this.uiSegmentSrv.transformToSegments(false));\n      // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n  }\n\n  onChangeInternal() {\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\n  }\n}\n\nHawkularDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n"]}