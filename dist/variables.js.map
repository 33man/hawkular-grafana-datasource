{"version":3,"sources":["../src/variables.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2BAAa,S;AAEX,2BAAY,WAAZ,EAAyB;AAAA;;AACvB,eAAK,WAAL,GAAmB,WAAnB;AACD;;;;kCAEO,M,EAAQ,O,EAAS;AAAA;;AACvB,gBAAI,YAAY,QAAQ,UAAR,IAAsB,KAAK,WAAL,CAAiB,SAAvD;AACA;AACA,gBAAI,gBAAgB,OAAO,KAAP,CAAa,QAAb,CAApB;AACA,gBAAI,WAAW,CAAC,MAAD,CAAf;AACA,gBAAI,aAAJ,EAAmB;AACjB,4BAAc,OAAd,CAAsB,gBAAQ;AAC5B,oBAAI,SAAS,MAAK,YAAL,CAAkB,IAAlB,EAAwB,SAAxB,CAAb;AACA,oBAAI,cAAc,EAAlB;AACA,uBAAO,OAAP,CAAe,eAAO;AACpB,2BAAS,OAAT,CAAiB,kBAAU;AACzB,gCAAY,IAAZ,CAAiB,OAAO,OAAP,CAAe,IAAf,EAAqB,GAArB,CAAjB;AACD,mBAFD;AAGD,iBAJD;AAKA,2BAAW,WAAX;AACD,eATD;AAUD;AACD,mBAAO,QAAP;AACD;;;uCAEY,I,EAAM,S,EAAW;AAC5B,gBAAI,SAAS,KAAK,WAAL,CAAiB,OAAjB,CAAyB,IAAzB,EAA+B,SAA/B,CAAb;AACA;AACA,gBAAI,OAAO,UAAP,CAAkB,GAAlB,CAAJ,EAA4B;AACxB,qBAAO,OAAO,SAAP,CAAiB,CAAjB,EAAoB,OAAO,MAAP,GAAc,CAAlC,EAAqC,KAArC,CAA2C,GAA3C,CAAP;AACH;AACD,mBAAO,CAAC,MAAD,CAAP;AACD","file":"variables.js","sourcesContent":["export class Variables {\n\n  constructor(templateSrv) {\n    this.templateSrv = templateSrv;\n  }\n\n  resolve(target, options) {\n    let variables = options.scopedVars || this.templateSrv.variables;\n    // For each variable in target, and each values of a given variable, build a resolved target string\n    let variableNames = target.match(/\\$\\w+/g);\n    var resolved = [target];\n    if (variableNames) {\n      variableNames.forEach(name => {\n        let values = this.getVarValues(name, variables);\n        let newResolved = [];\n        values.forEach(val => {\n          resolved.forEach(target => {\n            newResolved.push(target.replace(name, val));\n          });\n        });\n        resolved = newResolved;\n      });\n    }\n    return resolved;\n  }\n\n  getVarValues(name, variables) {\n    let values = this.templateSrv.replace(name, variables);\n    // result might be in like \"{id1,id2,id3}\" (as string)\n    if (values.startsWith('{')) {\n        return values.substring(1, values.length-1).split(',');\n    }\n    return [values];\n  }\n}\n"]}